<?php namespace JF;
/**

Copyright 2018 JQueryForm.com
License: http://www.jqueryform.com/license.php

FormID:  jqueryform-35e463
Date:    2018-01-27 16:45:24
Version: v2.1.0
Generated by http://www.jqueryform.com

PHP 5.3+ is required.
If mailgun is used AND the form has file upload field, PHP 5.5+ is required.

*/

class Config {
	private static $config;

    public static function getConfig( $decode = true ){
    	self::$config = self::_getConfig( $decode );
    	self::overwriteConfig();
    	return self::$config;
    }

    private static function _getConfig( $decode = true ){
        ob_start();
        // ---------------------------------------------------------------------
        // JSON format config
        // Note: please make a copy before you edit config manually
        // ---------------------------------------------------------------------

/**JSON_START**/ ?>
{
    "formId": "jqueryform-35e463",
    "email": {
        "to": "",
        "cc": "",
        "bcc": "",
        "subject": "",
        "template": ""
    },
    "admin": {
        "users": "admin:402ea",
        "dataDelivery": "emailAndFile"
    },
    "thankyou": {
        "url": "",
        "message": "",
        "seconds": "10"
    },
    "autoResponse": {
        "includeAttachments": true,
        "subject": "",
        "template": ""
    },
    "seo": {
        "trackerId": "",
        "title": "",
        "description": "",
        "keywords": "",
        "author": ""
    },
    "mailer": "local",
    "smtp": {
        "host": "",
        "user": "",
        "password": ""
    },
    "mailgun": {
        "domain": "",
        "apiKey": "",
        "fromEmail": "",
        "fromName": ""
    },
    "styles": {
        "iCheck": {
            "enabled": true,
            "skin": "flat",
            "colorScheme": "black"
        },
        "Select2": {
            "enabled": true
        }
    },
    "logics": [

    ],
    "fields": [
        {
            "label": "Enter a News Source",
            "field_type": "autocomplete",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "description": "Type to select",
                "presetJson": "",
                "options": [
                    {
                        "label": "American News",
                        "checked": false
                    },
                    {
                        "label": "CNN",
                        "checked": false
                    },
                    {
                        "label": "New York Times",
                        "checked": false
                    },
                    {
                        "label": "The Boston Tribune",
                        "checked": null
                    },
                    {
                        "label": "Washington Post",
                        "checked": null
                    }
                ]
            },
            "id": "f5",
            "cid": "c31"
        },
        {
            "label": "Title Analysis",
            "field_type": "section_break",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                }
            },
            "id": "f6",
            "cid": "c38"
        },
        {
            "label": "Is the news source\/domain a blog?",
            "field_type": "radio",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "options": [
                    {
                        "label": "Yes",
                        "checked": false
                    },
                    {
                        "label": "No",
                        "checked": false
                    }
                ],
                "presetJson": ""
            },
            "id": "f7",
            "cid": "c43"
        },
        {
            "label": "New Source Analysis",
            "field_type": "section_break",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                }
            },
            "id": "f8",
            "cid": "c48"
        },
        {
            "label": "Has anyone reported the source on one of the following websites? ",
            "field_type": "checkboxes",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "options": [
                    {
                        "label": "snopes.com",
                        "checked": false,
                        "value": ""
                    },
                    {
                        "label": "politifact.com",
                        "checked": false,
                        "value": ""
                    },
                    {
                        "label": "factcheck.org",
                        "checked": false,
                        "value": ""
                    }
                ],
                "validators": {
                    "minlength": {
                        "msg": "Please select at least {0} option(s)"
                    },
                    "maxlength": {
                        "msg": "Please select no more than {0} option(s)"
                    }
                },
                "presetJson": ""
            },
            "id": "f15",
            "cid": "c83"
        },
        {
            "label": "Content Analysis",
            "field_type": "section_break",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                }
            },
            "id": "f10",
            "cid": "c58"
        },
        {
            "label": "Pick a headline from this news source. Can you verify the information in another source?",
            "field_type": "radio",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "options": [
                    {
                        "label": "Yes",
                        "checked": false
                    },
                    {
                        "label": "No",
                        "checked": false
                    }
                ],
                "presetJson": ""
            },
            "id": "f11",
            "cid": "c63"
        },
        {
            "label": "Writing Style Analysis",
            "field_type": "section_break",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                }
            },
            "id": "f12",
            "cid": "c68"
        },
        {
            "label": "Does the source frequently make use of one or more of the following style inconsistencies? (Choose all that apply)",
            "field_type": "checkboxes",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "options": [
                    {
                        "label": "All-caps",
                        "checked": false
                    },
                    {
                        "label": "Use of exaggerated language to achieve a strong emotional response (example:  doomed, wow, destroy)",
                        "checked": false
                    },
                    {
                        "label": "Presence of numerous spelling, grammatical, and typographical errors",
                        "checked": false,
                        "value": ""
                    }
                ],
                "validators": {
                    "minlength": {
                        "msg": "Please select at least {0} option(s)"
                    },
                    "maxlength": {
                        "msg": "Please select no more than {0} option(s)"
                    }
                },
                "presetJson": ""
            },
            "id": "f14",
            "cid": "c78"
        },
        {
            "label": "Aesthetic Analysis",
            "field_type": "section_break",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                }
            },
            "id": "f16",
            "cid": "c89"
        },
        {
            "label": "Look at the homepage for the news source. Does it exhibit any of the following aesthetics?",
            "field_type": "checkboxes",
            "required": true,
            "field_options": {
                "images": {
                    "urls": "",
                    "style": [

                    ],
                    "slideshow": false
                },
                "options": [
                    {
                        "label": "Cluttered Content",
                        "checked": false,
                        "value": "Cluttered Content"
                    },
                    {
                        "label": "Text-heavy pages",
                        "checked": false,
                        "value": "Text-heavy pages"
                    },
                    {
                        "label": "Multitude of Born-digital images",
                        "checked": false,
                        "value": "Multitude of Born-digital images"
                    }
                ],
                "validators": {
                    "minlength": {
                        "msg": "Please select at least {0} option(s)"
                    },
                    "maxlength": {
                        "msg": "Please select no more than {0} option(s)"
                    }
                },
                "presetJson": ""
            },
            "id": "f17",
            "cid": "c94"
        },
        {
            "label": "Submit Button",
            "field_type": "submit",
            "required": true,
            "field_options": {
                "page": {
                    "title": "Submit",
                    "labelPrev": "< Back",
                    "showPageNumnber": false,
                    "pageNumberText": "{page} \/ {total}"
                },
                "images": {
                    "urls": "",
                    "slideshow": false
                }
            },
            "labelHide": true,
            "submit": {
                "label": "",
                "icon": "",
                "checkRequiredFields": ""
            },
            "id": "f0",
            "cid": "c0"
        }
    ],
    "licenseKey": ""
}
<?php /**JSON_END**/

        $json = ob_get_clean() ;

        return $decode ? json_decode( trim($json), true ) : $json;
    } // end of getConfig()

    private static function getValue( $fieldId, $default = NULL ){
        return isset( $_POST[$fieldId] ) ? $_POST[$fieldId] : $default ;
    }

    private static function overwriteConfig(){
    	//self::get_to();
    }

    private static function get_to(){
    	$value = self::getValue( 'c25' );
    	$to = array(
    		'Option 1' => 'a@a.com',
    		'Option 2' => 'b@b.com',
    		'Option 3' => 'c@c.com',
    	);

    	if( isset( $to[$value] ) ){
    		self::$config['email']['to'] = $to[ $value ];
    	};
    }

} // end of Config class